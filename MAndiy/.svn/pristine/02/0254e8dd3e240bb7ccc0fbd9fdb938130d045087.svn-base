package com.lanrui.andiy.service;

import java.util.ArrayList;
import java.util.List;

import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;

import com.lanrui.andiy.model.Model;
import com.lanrui.andiy.util.DBOpenHelper;

public class ModelService {
	private Context context;
	private SQLiteDatabase db = null;
	private DBOpenHelper openHelper;
	public ModelService(Context context) {
		this.context = context;
		openHelper = new DBOpenHelper(context);
		db = openHelper.getReadableDatabase();
	}
	
	public void closeDB() {
		this.db.close();
	}
	
	public void add(Model model) {
		db.execSQL("insert into model(type, path, no) values(?, ?, ?)", new Object[]{model.getType(), model.getPath(), model.getNo()});
	}
	
	public void batchModels(List<Model> models) {
		for(Model model : models) {
			db.execSQL("insert into model(type, path, no) values(?, ?, ?)", new Object[]{model.getType(), model.getPath(), model.getNo()});
		}
	}
	
	public List<Integer> getNoGroupByNo() {
		List<Integer> nos = new ArrayList<Integer>();
		Cursor cursor = db.rawQuery("select no from model group by no", null);
		while(cursor.moveToNext()) {
			nos.add(cursor.getInt(0));
		}
		cursor.close();
		return nos;
	}
	
	public List<List<Model>> getModelsByNos(List<Integer> nos) {
		List<List<Model>> modelss = new ArrayList<List<Model>>();
		for(Integer no : nos) {
			List<Model> models = new ArrayList<Model>();
			Cursor cursor = db.rawQuery("select * from model where no = ? ", new String[]{String.valueOf(no)});
			while(cursor.moveToNext()) {
				Model model = new Model();
				model.setId(cursor.getInt(cursor.getColumnIndex("id")));
				model.setNo(cursor.getInt(cursor.getColumnIndex("no")));
				model.setType(cursor.getString(cursor.getColumnIndex("type")));
				model.setPath(cursor.getString(cursor.getColumnIndex("path")));
				models.add(model);
			}
			modelss.add(models);
			cursor.close();
		}
		
		return modelss;
	}
	
	public int getNo() {
		Cursor cursor = db.rawQuery("select count(*) from model", null);
		cursor.moveToFirst();
		long count = cursor.getLong(0);
		if(count == 0) {
			cursor.close();
			return 1;
		}else {
			cursor = db.rawQuery("select no from model order by no desc", null);
			cursor.moveToFirst();
			int no = cursor.getInt(0);
			cursor.close();
			return no + 1;
		}
	}
	
	public long getCount() {
		Cursor cursor = db.rawQuery("select count(*) from model", null);
		cursor.moveToFirst();
		long count = cursor.getLong(0);
		cursor.close();
		return count;
	}
	
	public void deleteModelByNo(int no) {
		db.execSQL("delete from model where no = ?", new String[]{String.valueOf(no)});
	}
}











